{"version":3,"sources":["views/app-view.js"],"names":["AppView","Backbone","View","extend","el","events","initialize","this","foodListEle","$","input","render","length","foodsCol","each","food","FoodView","model","append","search","searchBtnStatus","createOnEnter","e","self","val","nutUrl","which","ENTER_KEY","html","calculateAllEle","hide","spinner","spin","loadTarget","ajax","done","result","reset","show","Object","prototype","toString","call","indexOf","hits","newFoods","i","newFood","Food","title","fields","item_name","brandName","brand_name","calories","nf_calories","get","set","push","alert","fail","respond"],"mappings":"YAAA,IAAIA,SAAUC,SAASC,KAAKC,QAA5BC,GAAIJ,QAGFK,QADAD,sBAFiC,gBAGjCC,mBAAQ,UAMRC,WAAY,WADZC,KAAAC,YAAAC,EAAA,aACAH,KAAAA,MAAYC,KAAAE,EAAA,cACVF,KAAKC,gBAAgBC,EAAA,iBACrBF,KAAKG,iBAAe,GAMtBC,OAAQ,WAOJ,MAPJA,UAAQC,OAAA,IACNC,SAAAC,KAAA,SAAAC,GACIF,GAAAA,GAASD,GAATI,WAAqBC,MAAAF,GACvBF,MAAAA,YAAcK,OAASH,EAAMJ,SAAAP,KAC3BG,MACAA,KAAAC,YAAKA,QAEFA,MAGRW,OA3BgC,WA8B/BZ,KAAKa,iBAAkB,EADzBD,KAAAA,iBAGCE,cAhCgC,SAAAC,GAmC/B,GAAIC,GAAOhB,KADbc,EAAAA,EAAeX,MAAAc,KAEb,IAAWD,KAAPR,EAAJ,CACA,GAAAU,GAAA,2CAAAV,EAAA,gIAK6B,IAAzBQ,EAAKH,iBAA4BE,EAAEI,QAAUC,aAApB,IAAzBJ,EAAKH,kBACPG,EAAIA,iBAAA,GAGJhB,KAAAC,YAAAoB,KAAA,IAEAL,EAAAM,gBAAAC,OAEAC,QAAAC,KAAAC,YAGAxB,EAAEyB,MAAAA,IAAKT,IAAPU,KAGCA,SAAKC,GAOJ,GALAvB,SAASwB,QAETN,QAAQC,OAERT,EAAKM,gBAAgBS,QAC6C,IAA9DC,OAAOC,UAAUC,SAASC,KAAKN,GAAQO,QAAQ,WAGjD,GADApB,EAAKb,MAAMc,IAAI,IACXY,EAAOQ,KAAM,CAEf,IAAK,GADDC,MACKC,EAAI,EAAGA,EAAIV,EAAOQ,KAAKhC,OAAQkC,IAAK,CAE3C,GAAIC,GAAU,GAAIC,OAChBC,MAAOb,EAAOQ,KAAKE,GAAGI,OAAOC,UAC7BC,UAAWhB,EAAOQ,KAAKE,GAAGI,OAAOG,WACjCC,SAAUlB,EAAOQ,KAAKE,GAAGI,OAAOK,aAGD,UAA7BR,EAAQS,IAAI,cACdT,EAAQU,IAAI,YAAa,IAE3BZ,EAASa,KAAKX,GAGhBlC,SAAS6C,KAAKb,GACdtB,EAAKZ,cAGPgD,OAAM,qBAIRC,KAAA,SAAAC,GAEA9B,EAAAA,gBAAAO,KAAA,KACAqB,QAAM3B,OAxCR2B,MAAA","file":"app-view.js","sourcesContent":["var AppView = Backbone.View.extend({\r\n\r\n  el: '#todo',\r\n  events: {\r\n    'keypress .searchIpt': 'createOnEnter',\r\n    'click .searchBtn': 'search',\r\n  },\r\n\r\n  // Called when the view is first created\r\n  initialize: function() {\r\n    this.foodListEle = $('#foodList');\r\n    this.input = this.$('.searchIpt');\r\n    this.calculateAllEle = $('#calculateAll');\r\n    this.searchBtnStatus = false;\r\n  },\r\n\r\n  // Re-render the titles of the todo item.\r\n  render: function() {\r\n    // 刷新食物列表\r\n    if (foodsCol.length > 0) {\r\n      foodsCol.each(function(food) {\r\n        var view = new FoodView({ model: food });\r\n        this.foodListEle.append(view.render().el);\r\n      }, this);\r\n      this.foodListEle.show();\r\n    }\r\n    return this;\r\n  },\r\n\r\n  search: function() {\r\n    this.searchBtnStatus = true;\r\n    this.createOnEnter();\r\n  },\r\n\r\n  createOnEnter: function(e) {\r\n    var self = this;\r\n    var food = self.input.val();\r\n    // 不输入内容返回\r\n    if (food === '') return;\r\n    var nutUrl = 'https://api.nutritionix.com/v1_1/search/' + food + '?fields=item_name%2Citem_id%2Cbrand_name%2Cnf_calories%2Cnf_total_fat'\r\n    + '&appId=fafaa50d&appKey=dd6e5d7563cfb23e902d053eca5c80a4';\r\n\r\n    if (self.searchBtnStatus === true || e.which === ENTER_KEY) {\r\n      if (self.searchBtnStatus === true) {\r\n        self.searchBtnStatus = false;\r\n      }\r\n      // 清除原来内容\r\n      this.foodListEle.html('');\r\n      // 隐藏收藏的食物列表\r\n      self.calculateAllEle.hide();\r\n      // 显示加载显示器\r\n      spinner.spin(loadTarget);\r\n\r\n      $.ajax({\r\n        url: nutUrl,\r\n      })\r\n      .done(function(result) {\r\n        // 清除collections内容\r\n        foodsCol.reset();\r\n        // 成功响应后，关闭加载显示器\r\n        spinner.spin();\r\n        // 显示食物列表\r\n        self.calculateAllEle.show();\r\n        if (Object.prototype.toString.call(result).indexOf('Object') !== -1) {\r\n          // 清除输入框内容\r\n          self.input.val('');\r\n          if (result.hits) {\r\n            var newFoods = [];\r\n            for (var i = 0; i < result.hits.length; i++) {\r\n              // new 一个 model\r\n              var newFood = new Food({\r\n                title: result.hits[i].fields.item_name,\r\n                brandName: result.hits[i].fields.brand_name,\r\n                calories: result.hits[i].fields.nf_calories\r\n              });\r\n              // 如果是USDA的不用显示USDA name\r\n              if (newFood.get('brandName') === 'USDA') {\r\n                newFood.set('brandName', '');\r\n              }\r\n              newFoods.push(newFood);\r\n            }\r\n            // 添加到collections中\r\n            foodsCol.push(newFoods);\r\n            self.render();\r\n          }\r\n        } else {\r\n          alert('响应的结果数据类型不是一个对象');\r\n        }\r\n      })\r\n      .fail(function(respond) {\r\n        // 显示食物列表\r\n        self.calculateAllEle.show(500);\r\n        spinner.spin();\r\n        alert('响应失败，请刷新重试');\r\n      });\r\n    }\r\n  }\r\n});\r\n"]}