{"version":3,"sources":["views/app-view.js"],"names":["TodoView","Backbone","View","extend","tagName","events","initialize","$","this","$el","fooList","input","ServiceList","listenTo","foodLists","render","html","todo","each","get","edit","close","createOnEnter","e","val","ENTER_KEY","self","reset","ajax","url","done","Object","prototype","result","toString","call","indexOf","myTodos","myTodo","hits","title","push","i","fields","item_name","alert","fail","respond"],"mappings":"YACA,IAAIA,UAAWC,SAASC,KAAKC,QAE3BC,QAAS,QAKTC,QAAAA,mBAAQ,iBAIRC,WAAA,WACAA,KAAAA,IAAYC,EAAA,SACVC,KAAKC,QAAQF,EAAA,YACbC,KAAKE,MAALF,KAAiBD,EAAA,WACjBC,KAAKG,UAAQ,GAAOC,aAMpBJ,KAAAK,SAAAL,KAAAM,UAAA,MAAAN,KAAAO,SAIFA,OAAA,WAgBG,MANDP,MAAAE,QAAAM,KAAA,IACAR,KAAKE,WACLF,KAAIM,UAAKA,KAAW,SAAAG,GAClBT,KAAKM,QAAUI,OAAK,8CAAeD,EAAAE,IAAA,SAAA,QAAAF,EAAAE,IAAA,SAAA,UAAAF,EAAAE,IAAA,SAAA,iBACjCX,MAEHA,MAIHY,KAAM,aAINC,MAAO,aAGPC,cAAA,SAAAC,GACDD,GAAAA,GAAAA,IACcd,MAAXG,MAAAa,KAIFD,GAAIA,QAAAE,YAGAC,EAAKZ,UAAUa,QACfpB,EAAEqB,MACAC,IARO,mLAWPC,KAAIC,SAAOC,GACT,IAAiB,IAAjBD,OAAIE,UAAaC,SAAAC,KAAAF,GAAAG,QAAA,WACf,GAAAH,EAAII,KAAU,CAEd,IAAA,GADFA,MACMC,EAAAA,EAAAA,EAASL,EAASM,KAACC,OAAOP,IAAOM,CACrCF,GAAAA,GAAQI,GAAKH,OAAbE,MAAAP,EAAAM,KAAAG,GAAAC,OAAAC,WACDP,GAAAI,KAAAH,GAEAZ,EAAAZ,UAAA2B,KAAAJ,QAGFQ,OAAA,qBAfHC,KAAA,SAAAC,GAoBHF,MAAA","file":"app-view.js","sourcesContent":["\r\nvar TodoView = Backbone.View.extend({\r\n\r\n  tagName: '#todo',\r\n\r\n  // Cache the template function for a single item.\r\n  // todoTpl: _.template( $('#item-template').html() ),\r\n\r\n  events: {\r\n    'keypress .search': 'createOnEnter',\r\n  },\r\n\r\n  // Called when the view is first created\r\n  initialize: function() {\r\n    this.$el = $('#todo');\r\n    this.fooList = $('#fooList');\r\n    this.input = this.$('.search');\r\n    this.foodLists = new ServiceList();\r\n    // this.foodLists = '';\r\n    // Later we'll look at:\r\n    // this.listenTo(someCollection, 'all', this.render);\r\n    // but you can actually run this example right now by\r\n    // calling\r\n    this.listenTo(this.foodLists, 'all', this.render);\r\n  },\r\n\r\n  // Re-render the titles of the todo item.\r\n  render: function() {\r\n    // this.$el.html( this.todoTpl( this.model.attributes ) );\r\n    // $el here is a reference to the jQuery element\r\n    // associated with the view, todoTpl is a reference\r\n    // to an Underscore template and model.attributes\r\n    // contains the attributes of the model.\r\n    // Altogether, the statement is replacing the HTML of\r\n    // a DOM element with the result of instantiating a\r\n    // template with the model's attributes.\r\n    // 清除了原有内容\r\n    this.fooList.html('');\r\n    if (this.foodLists) {\r\n      this.foodLists.each(function(todo) {\r\n        this.fooList.append('<li><input type=\"checkbox\" value=\"1\" name=\"' + todo.get('title') + '\" /> ' + todo.get('title') + '<span>$' + todo.get('title') + '</span></li>');\r\n  \t\t}, this);\t// \"this\" is the context in the callback\r\n    }\r\n    return this;\r\n  },\r\n\r\n  edit: function() {\r\n    // executed when todo label is double clicked\r\n  },\r\n\r\n  close: function() {\r\n    // executed when todo loses focus\r\n  },\r\n  // If you hit `enter`, we're through editing the item.\r\n\tcreateOnEnter: function(e) {\r\n    var self = this;\r\n    var food = this.input.val();\r\n    var nutUrl = 'https://api.nutritionix.com/v1_1/search/\"+ food +\"?fields=item_name%2Citem_id%2Cbrand_name%2Cnf_calories%2Cnf_total_fat'\r\n      + '&appId=fafaa50d&appKey=dd6e5d7563cfb23e902d053eca5c80a4';\r\n\t\tif (e.which === ENTER_KEY) {\r\n      // 清空列表\r\n      // self.fooList.html('');\r\n      self.foodLists.reset();\r\n      $.ajax({\r\n        url: nutUrl,\r\n      })\r\n      .done(function(result) {\r\n        if (Object.prototype.toString.call(result).indexOf('Object') !== -1) {\r\n          if (result.hits) {\r\n            var myTodos = [];\r\n          for (var i = 0; i < result.hits.length; i++) {\r\n            var myTodo = new Todo({title: result.hits[i].fields.item_name});\r\n            myTodos.push(myTodo);\r\n          }\r\n          self.foodLists.push(myTodos);\r\n          }\r\n        } else {\r\n          alert('响应的结果数据类型不是一个对象');\r\n        }\r\n      })\r\n      .fail(function(respond) {\r\n        alert('响应失败')\r\n      });\r\n\t\t}\r\n\t}\r\n});\r\n"]}