{"version":3,"sources":["views/todo-view.js"],"names":["TodoView","Backbone","View","extend","tagName","events","click","initialize","this","$el","$","listenTo","model","render","prop","get","edit","close","toggleService","console","log"],"mappings":"YAAA,IAAIA,UAAWC,SAASC,KAAKC,QAA7BC,QAAIJ,KAIFK,QAGEC,MAAS,iBAIXC,WAAY,WADZC,KAAAC,IAAAC,EAAA,SAMEF,KAAAG,SAAAH,KAAAI,MAAA,SAAAJ,KAAAK,SAMFA,OAAQ,WACN,MADFA,MAAAA,EAAQ,SAAAC,KAAA,UAAWN,KAAAI,MAAAG,IAAA,YACjBP,MAGDQ,KA1BiC,aA8BjCC,MA9BiC,aAiChCC,cAAA,WAjCgCC,QAAAC,IAAA,KAmClCF,KAAAA,MAAAA","file":"todo-view.js","sourcesContent":["var TodoView = Backbone.View.extend({\r\n\r\n  tagName: 'li',\r\n  // Cache the template function for a single item.\r\n  // todoTpl: _.template($('#item-template').html()),\r\n\r\n  events: {\r\n    'click': 'toggleService'\r\n  },\r\n\r\n  // Called when the view is first created\r\n  initialize: function() {\r\n    this.$el = $('#todo');\r\n\r\n    // Later we'll look at:\r\n    // this.listenTo(someCollection, 'all', this.render);\r\n    // but you can actually run this example right now by\r\n    // calling\r\n    this.listenTo(this.model, 'change', this.render);\r\n  },\r\n\r\n  // Re-render the titles of the todo item.\r\n  render: function() {\r\n    // this.$el.html(this.todoTpl(this.model.attributes));\r\n    this.$('input').prop('checked', this.model.get('checked'));\r\n    return this;\r\n  },\r\n\r\n  edit: function() {\r\n    // executed when todo label is double clicked\r\n  },\r\n\r\n  close: function() {\r\n    // executed when todo loses focus\r\n  },\r\n  toggleService: function(){\r\n    console.log(222);\r\n\t\tthis.model.toggle();\r\n\t}\r\n});\r\n"]}