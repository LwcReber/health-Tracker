{"version":3,"sources":["views/todo-view.js"],"names":["TodoView","Backbone","View","extend","tagName","events","click","initialize","this","listenTo","model","render","close","$el","html","get","$","prop","toggleService","toggle"],"mappings":"YAAA,IAAIA,UAAWC,SAASC,KAAKC,QAA7BC,QAAIJ,KAIFK,QAGEC,MAAS,iBAIXC,WAAY,WAGVC,KAAAC,SAAAD,KAAAE,MAAA,SAAAF,KAAAG,SAMFA,OAAQ,WAWRC,MAZAJ,MAAAK,IAAAC,KACAH,mDAEIH,KAAAE,MAAAK,IAAA,aAAA,gBAKFP,KAAAE,MAAqBK,IAArB,SAAqCL,2CACrCF,KAAAE,MAAAK,IAAA,YAAA,WADAP,KAAKQ,EAAE,SAASC,KAAK,UAAWT,KAAKE,MAAMK,IAAI,YAI1CP,MAAPI,MAAO,aA/BTM,cAAA,WAoCEV,KAAKE,MAAMS","file":"todo-view.js","sourcesContent":["var TodoView = Backbone.View.extend({\r\n\r\n  tagName: 'li',\r\n\r\n  // todoTpl: _.template($('#item-template').html()),\r\n\r\n  events: {\r\n    'click': 'toggleService'\r\n  },\r\n\r\n  // Called when the view is first created\r\n  initialize: function() {\r\n    // Later we'll look at:\r\n    // this.listenTo(someCollection, 'all', this.render);\r\n    // but you can actually run this example right now by\r\n    // calling\r\n    this.listenTo(this.model, 'change', this.render);\r\n  },\r\n\r\n  // Re-render the titles of the todo item.\r\n  render: function() {\r\n    this.$el.html(\r\n      '<input type=\"radio\" value=\"\" name=\"food\"/>'\r\n      + '<span>' + this.model.get('brandName') + '</span>'\r\n      + '<span>' + this.model.get('title') + '</span>'\r\n      + '<span class=\"calories\">calories: ' + this.model.get('calories') + '</span>'\r\n    );\r\n    this.$('input').prop('checked', this.model.get('checked'));\r\n    return this;\r\n  },\r\n\r\n  close: function() {\r\n    // executed when todo loses focus\r\n  },\r\n\r\n  toggleService: function(){\r\n\t\tthis.model.toggle();\r\n\t}\r\n});\r\n"]}